package playboard

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestIsOver(t *testing.T) {
	testCases := []struct {
		name              string
		playboard         string
		expectedIsCapture bool
	}{
		{
			name: "is over player 1",
			playboard: "11111.............." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"...................",
			expectedIsCapture: true,
		},
		{
			name: "is over player 0",
			playboard: "..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..............00000",
			expectedIsCapture: true,
		},
		{
			name: "is over horizontal",
			playboard: "..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"....00000.........." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"...................",
			expectedIsCapture: true,
		},
		{
			name: "is over vertical",
			playboard: "..................." +
				"..................." +
				".......1..........." +
				".......1..........." +
				".......1..........." +
				".......1..........." +
				".......1..........." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"...................",
			expectedIsCapture: true,
		},
		{
			name: "is over right diagonal",
			playboard: "..................." +
				"..................." +
				"..................." +
				"..................." +
				"......0............" +
				".......0..........." +
				"........0.........." +
				".........0........." +
				"..........0........" +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"...................",
			expectedIsCapture: true,
		},
		{
			name: "is over left diagonal",
			playboard: "..................." +
				"..................." +
				"..................." +
				"..............1...." +
				".............1....." +
				"............1......" +
				"...........1......." +
				"..........1........" +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"...................",
			expectedIsCapture: true,
		},
		{
			name: "is not over1",
			playboard: "..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"...............1111" +
				"1.................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"...................",
			expectedIsCapture: false,
		},
		{
			name: "is not over2",
			playboard: "..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"............1......" +
				"............1......" +
				"............1......" +
				"............11.....",
			expectedIsCapture: false,
		},
	}

	for _, tc := range testCases {
		t.Run(tc.playboard, func(t *testing.T) {

			isOver := IsOver(tc.playboard)

			assert.Equal(t, tc.expectedIsCapture, isOver)
		})
	}
}

func TestIsCapture(t *testing.T) {
	testCases := []struct {
		name              string
		playboard         string
		index             int
		currentPlayer     string
		expectedIsCapture bool
		expectedIndex1    int
		expectedIndex2    int
	}{
		{
			name: "is capture player 0",
			playboard: "0110.............." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"...................",
			index:             0,
			currentPlayer:     Player1,
			expectedIsCapture: true,
			expectedIndex1:    1,
			expectedIndex2:    2,
		},
		{
			name: "is capture player 1",
			playboard: "..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"..................." +
				"...............1001",

			index:             357,
			currentPlayer:     Player2,
			expectedIsCapture: true,
			expectedIndex1:    358,
			expectedIndex2:    359,
		},
		//{
		//	name: "is over horizontal",
		//	playboard: "..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"....00000.........." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"...................",
		//	expectedIsCapture: true,
		//},
		//{
		//	name: "is over vertical",
		//	playboard: "..................." +
		//		"..................." +
		//		".......1..........." +
		//		".......1..........." +
		//		".......1..........." +
		//		".......1..........." +
		//		".......1..........." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"...................",
		//	expectedIsCapture: true,
		//},
		//{
		//	name: "is over right diagonal",
		//	playboard: "..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"......0............" +
		//		".......0..........." +
		//		"........0.........." +
		//		".........0........." +
		//		"..........0........" +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"...................",
		//	expectedIsCapture: true,
		//},
		//{
		//	name: "is over left diagonal",
		//	playboard: "..................." +
		//		"..................." +
		//		"..................." +
		//		"..............1...." +
		//		".............1....." +
		//		"............1......" +
		//		"...........1......." +
		//		"..........1........" +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"...................",
		//	expectedIsCapture: true,
		//},
		//{
		//	name: "is not over1",
		//	playboard: "..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"...............1111" +
		//		"1.................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"...................",
		//	expectedIsCapture: false,
		//},
		//{
		//	name: "is not over2",
		//	playboard: "..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"..................." +
		//		"............1......" +
		//		"............1......" +
		//		"............1......" +
		//		"............11.....",
		//	expectedIsCapture: false,
		//},
	}

	for _, tc := range testCases {
		t.Run(tc.playboard, func(t *testing.T) {

			isCapture, index1, index2 := isCaptured(tc.playboard, tc.index, tc.currentPlayer)

			assert.Equal(t, tc.expectedIsCapture, isCapture)
			assert.Equal(t, tc.expectedIndex1, *index1)
			assert.Equal(t, tc.expectedIndex2, *index2)
		})
	}
}
